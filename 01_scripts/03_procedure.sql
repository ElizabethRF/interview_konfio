CREATE OR REPLACE PROCEDURE        LOANS.CORREGENUMEROS 
(
  PARAM1 IN VARCHAR2 
) AS 

 CURSOR NUMEROS_PAGO_CURSOR
  IS
    SELECT  MINIMOLOAN NUMERO_PAGO 
  
      FROM (
              SELECT * FROM (
                  SELECT (SELECT MIN(ID) DATO FROM LOANS.PAYMENT WHERE LOAN_ID= P.MINIMOLOAN) IDMENOR,
                         (SELECT MIN(PAYMENT_NUMBER) DATO FROM LOANS.PAYMENT WHERE LOAN_ID= P.MINIMOLOAN) PAGOMENOR,
                   
                      P.*
      
                  FROM (SELECT  ID IDACTUAL, MIN (PAYMENT_NUMBER) MINIMOPAY, MIN (LOAN_ID) MINIMOLOAN FROM LOANS.PAYMENT
                        GROUP BY ID, PAYMENT_NUMBER
                        ORDER BY ID
                      ) P
      
                  WHERE MINIMOPAY>1
      
      
                            )
      
               WHERE  IDACTUAL=IDMENOR
          ) ORDER BY 1;

   V_NUMERO INT:=NULL; 
   V_NUMERO2 INT:=NULL; 
   V_CONTADOR INT:=NULL; 
   V_INDICE INT:=1; 
 

BEGIN
 EXECUTE IMMEDIATE 'DELETE FROM  LOANS.TEMP ';
 COMMIT;

 EXECUTE IMMEDIATE 'DROP SEQUENCE LOANS.SEQ_NUMBER';
    DBMS_UTILITY.EXEC_DDL_STATEMENT( 'CREATE SEQUENCE LOANS.SEQ_NUMBER INCREMENT BY 1 START WITH 1 MAXVALUE 9999999 MINVALUE -1 NOCACHE');
  OPEN NUMEROS_PAGO_CURSOR;
        LOOP FETCH NUMEROS_PAGO_CURSOR INTO V_NUMERO;
        EXIT WHEN NUMEROS_PAGO_CURSOR%NOTFOUND;
            BEGIN          
                EXECUTE IMMEDIATE 'INSERT INTO LOANS.TEMP (NUMEROS) VALUES (' || V_NUMERO||')';
                   COMMIT;
            END;
        END LOOP;



 CLOSE NUMEROS_PAGO_CURSOR;


 SELECT COUNT (*) INTO V_CONTADOR FROM LOANS.TEMP;

 WHILE V_INDICE<=V_CONTADOR


 LOOP   


         BEGIN
                 SELECT NUMEROS INTO  V_NUMERO2 FROM( SELECT NUMEROS FROM  LOANS.TEMP

                  WHERE ROWNUM<=V_INDICE 
                  ORDER BY 1 DESC
                 ) WHERE   ROWNUM<=1;
                  
                  EXCEPTION
             WHEN OTHERS THEN
             DBMS_OUTPUT.PUT_LINE(SQLERRM);

             END;




            MERGE INTO LOANS.PAYMENT2 B

            USING( 
                  SELECT ID, LOAN_ID, PAYMENT_NUMBER FROM LOANS.PAYMENT

                  WHERE LOAN_ID = V_NUMERO2
                  ORDER BY ID
                 )E 


            ON (B.ID = E.ID)
            WHEN MATCHED THEN
              UPDATE SET B.PAYMENT_NUMBER = LOANS.SEQ_NUMBER.NEXTVAL;



            V_INDICE:=V_INDICE+1;




             
              EXECUTE IMMEDIATE 'DROP SEQUENCE LOANS.SEQ_NUMBER';



             DBMS_UTILITY.EXEC_DDL_STATEMENT( 'CREATE SEQUENCE LOANS.SEQ_NUMBER INCREMENT BY 1 START WITH 1 MAXVALUE 9999999 MINVALUE -1 NOCACHE');


 END LOOP;
  DBMS_OUTPUT.PUT_LINE('TERMINO');
 COMMIT;
 --EXECUTE IMMEDIATE 'DROP TABLE LOANS.TEMP';
EXCEPTION
   WHEN OTHERS THEN
   DBMS_OUTPUT.PUT_LINE(SQLERRM);

END CORREGENUMEROS;